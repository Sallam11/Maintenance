// <auto-generated />
using System;
using Maintenance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Maintenance.Migrations
{
    [DbContext(typeof(MaintenanceDbContext))]
    partial class MaintenanceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Machine_Movement", b =>
                {
                    b.Property<int>("MachineMovement_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MachineMovement_ID"), 1L, 1);

                    b.Property<int>("EmployeeID_FK")
                        .HasColumnType("int");

                    b.Property<int>("MachineID_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("MachineMovement_CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MachineMovement_CreatedUserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("MachineMovement_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MachineMovement_EditBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("MachineMovement_EditUserID")
                        .HasColumnType("datetime2");

                    b.Property<string>("MachineMovement_Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovementTypeID_FK")
                        .HasColumnType("int");

                    b.Property<int>("WorkTypeID_FK")
                        .HasColumnType("int");

                    b.HasKey("MachineMovement_ID");

                    b.HasIndex("EmployeeID_FK");

                    b.HasIndex("MachineID_FK");

                    b.HasIndex("MovementTypeID_FK");

                    b.HasIndex("WorkTypeID_FK");

                    b.ToTable("Machine_Movements");
                });

            modelBuilder.Entity("Maintenance.Models.Branch", b =>
                {
                    b.Property<int>("Branch_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Branch_ID"), 1L, 1);

                    b.Property<string>("Branch_ArName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch_EngName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Branch_ID");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("Maintenance.Models.Brand_Group", b =>
                {
                    b.Property<int>("BarndGroup_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BarndGroup_ID"), 1L, 1);

                    b.Property<string>("BarndGroup_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BarndGroup_ID");

                    b.ToTable("Brand_Groups");
                });

            modelBuilder.Entity("Maintenance.Models.Brand_SubGroup", b =>
                {
                    b.Property<int>("BarndSubgroup_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BarndSubgroup_ID"), 1L, 1);

                    b.Property<int>("BarndGroup_IDFK")
                        .HasColumnType("int");

                    b.Property<string>("BarndSubgroup_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BarndSubgroup_ID");

                    b.HasIndex("BarndGroup_IDFK");

                    b.ToTable("Brand_SubGroups");
                });

            modelBuilder.Entity("Maintenance.Models.Employee", b =>
                {
                    b.Property<int>("Employee_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee_ID"), 1L, 1);

                    b.Property<string>("Employee_ArName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Employee_BranchID")
                        .HasColumnType("int");

                    b.Property<string>("Employee_EngName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Employee_No")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Employee_Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Employee_ProfessionID")
                        .HasColumnType("int");

                    b.Property<string>("Employee_iqama")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Employee_ID");

                    b.HasIndex("Employee_BranchID");

                    b.HasIndex("Employee_ProfessionID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Maintenance.Models.Item", b =>
                {
                    b.Property<int>("Item_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Item_ID"), 1L, 1);

                    b.Property<int>("ItemGroup_IDFK")
                        .HasColumnType("int");

                    b.Property<int>("ItemSubGroup_IDFK")
                        .HasColumnType("int");

                    b.Property<string>("Item_Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Item_Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Item_ID");

                    b.HasIndex("ItemGroup_IDFK");

                    b.HasIndex("ItemSubGroup_IDFK");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Maintenance.Models.Item_Group", b =>
                {
                    b.Property<int>("ItemGroup_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemGroup_ID"), 1L, 1);

                    b.Property<string>("ItemGroup_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ItemGroup_ID");

                    b.ToTable("Item_Groups");
                });

            modelBuilder.Entity("Maintenance.Models.Item_SubGroup", b =>
                {
                    b.Property<int>("ItemSubGroup_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemSubGroup_ID"), 1L, 1);

                    b.Property<int>("ItemGroup_IDFK")
                        .HasColumnType("int");

                    b.Property<string>("ItemSubGroup_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ItemSubGroup_ID");

                    b.HasIndex("ItemGroup_IDFK");

                    b.ToTable("Item_SubGroups");
                });

            modelBuilder.Entity("Maintenance.Models.Machine", b =>
                {
                    b.Property<int>("Machine_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Machine_ID"), 1L, 1);

                    b.Property<int>("GroupID_FK")
                        .HasColumnType("int");

                    b.Property<string>("Machine_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Machine_No")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Machine_PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubGroupID_FK")
                        .HasColumnType("int");

                    b.HasKey("Machine_ID");

                    b.HasIndex("GroupID_FK");

                    b.HasIndex("SubGroupID_FK");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Maintenance.Models.Movement_Type", b =>
                {
                    b.Property<int>("MovementType_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovementType_ID"), 1L, 1);

                    b.Property<string>("MovementType_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MovementType_ID");

                    b.ToTable("Movement_Types");
                });

            modelBuilder.Entity("Maintenance.Models.Profession", b =>
                {
                    b.Property<int>("Profession_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Profession_ID"), 1L, 1);

                    b.Property<string>("Profession_ArName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession_EngName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Profession_ID");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("Maintenance.Models.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"), 1L, 1);

                    b.Property<int>("EmployeeID_FK")
                        .HasColumnType("int");

                    b.Property<bool>("User_Active")
                        .HasColumnType("bit");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("User_Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("User_ID");

                    b.HasIndex("EmployeeID_FK");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Maintenance.Models.Work_Type", b =>
                {
                    b.Property<int>("WorkType_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkType_ID"), 1L, 1);

                    b.Property<string>("WorkType_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("WorkType_ID");

                    b.ToTable("Work_Types");
                });

            modelBuilder.Entity("Machine_Movement", b =>
                {
                    b.HasOne("Maintenance.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Maintenance.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Maintenance.Models.Movement_Type", "Movement_Type")
                        .WithMany()
                        .HasForeignKey("MovementTypeID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Maintenance.Models.Work_Type", "Work_Type")
                        .WithMany()
                        .HasForeignKey("WorkTypeID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Machine");

                    b.Navigation("Movement_Type");

                    b.Navigation("Work_Type");
                });

            modelBuilder.Entity("Maintenance.Models.Brand_SubGroup", b =>
                {
                    b.HasOne("Maintenance.Models.Brand_Group", "Brand_Groups")
                        .WithMany()
                        .HasForeignKey("BarndGroup_IDFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand_Groups");
                });

            modelBuilder.Entity("Maintenance.Models.Employee", b =>
                {
                    b.HasOne("Maintenance.Models.Branch", "Branchs")
                        .WithMany()
                        .HasForeignKey("Employee_BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Maintenance.Models.Profession", "Professions")
                        .WithMany()
                        .HasForeignKey("Employee_ProfessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branchs");

                    b.Navigation("Professions");
                });

            modelBuilder.Entity("Maintenance.Models.Item", b =>
                {
                    b.HasOne("Maintenance.Models.Item_Group", "Item_Groups")
                        .WithMany()
                        .HasForeignKey("ItemGroup_IDFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Maintenance.Models.Item_SubGroup", "Item_SubGroups")
                        .WithMany()
                        .HasForeignKey("ItemSubGroup_IDFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item_Groups");

                    b.Navigation("Item_SubGroups");
                });

            modelBuilder.Entity("Maintenance.Models.Item_SubGroup", b =>
                {
                    b.HasOne("Maintenance.Models.Item_Group", "Item_Groups")
                        .WithMany()
                        .HasForeignKey("ItemGroup_IDFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item_Groups");
                });

            modelBuilder.Entity("Maintenance.Models.Machine", b =>
                {
                    b.HasOne("Maintenance.Models.Brand_Group", "Brand_Group")
                        .WithMany()
                        .HasForeignKey("GroupID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Maintenance.Models.Brand_SubGroup", "Brand_SubGroup")
                        .WithMany()
                        .HasForeignKey("SubGroupID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand_Group");

                    b.Navigation("Brand_SubGroup");
                });

            modelBuilder.Entity("Maintenance.Models.User", b =>
                {
                    b.HasOne("Maintenance.Models.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
